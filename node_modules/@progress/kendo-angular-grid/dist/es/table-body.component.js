import { Component, Input } from '@angular/core';
import { DetailsService } from './details.service';
/**
 * @hidden
 */
export var TableBodyComponent = (function () {
    function TableBodyComponent(detailsService) {
        this.detailsService = detailsService;
        this.columns = [];
        this.skip = 0;
    }
    TableBodyComponent.prototype.toggleRow = function (index, dataItem) {
        this.detailsService.toggleRow(this.skip + index, dataItem);
        return false;
    };
    TableBodyComponent.prototype.isExpanded = function (index) {
        return this.detailsService.isExpanded(this.skip + index);
    };
    TableBodyComponent.prototype.detailButtonStyles = function (index) {
        var expanded = this.isExpanded(index);
        return { 'k-minus': expanded, 'k-plus': !expanded };
    };
    TableBodyComponent.decorators = [
        { type: Component, args: [{
                    selector: '[kendoGridTableBody]',
                    template: "\n    <template ngFor\n        [ngForOf]=\"data\"\n        let-item\n        let-rowIndex=\"index\"\n        let-odd=\"odd\">\n        <tr [class.k-alt]=\"odd\"\n            [class.k-master-row]=\"detailTemplate?.templateRef\"\n            [kendoGridSelectable]=\"selectable\"\n            [index]=\"skip + rowIndex\">\n            <td [class.k-hierarchy-cell]=\"true\"\n            *ngIf=\"detailTemplate?.templateRef\">\n                <a class=\"k-icon\"\n                    [ngClass]=\"detailButtonStyles(rowIndex)\"\n                    href=\"#\" tabindex=\"-1\" (click)=\"toggleRow(rowIndex, item)\"></a>\n            </td>\n            <td\n                [ngClass]=\"column.cssClass\"\n                [ngStyle]=\"column.style\"\n                *ngFor=\"let column of columns; let columnIndex = index\">\n                <template\n                    [templateContext]=\"{\n                        templateRef: column.templateRef,\n                        dataItem: item,\n                        column: column,\n                        columnIndex: columnIndex,\n                        rowIndex: rowIndex,\n                        $implicit: item\n                        }\">\n                </template>\n                <template [ngIf]=\"!column.templateRef\">{{item | valueOf: column.field: column.format}}</template>\n            </td>\n        </tr>\n        <tr *ngIf=\"detailTemplate?.templateRef && isExpanded(rowIndex)\"\n            [class.k-detail-row]=\"true\"\n            [class.k-alt]=\"odd\">\n            <td [class.k-hierarchy-cell]=\"true\"></td>\n            <td [class.k-detail-cell]=\"true\"\n                [attr.colspan]=\"columns.length\">\n                <template\n                    [templateContext]=\"{\n                        templateRef: detailTemplate?.templateRef,\n                        dataItem: item,\n                        rowIndex: rowIndex,\n                        $implicit: item\n                        }\">\n                </template>\n            </td>\n        </tr>\n    </template>\n    "
                },] },
    ];
    /** @nocollapse */
    TableBodyComponent.ctorParameters = [
        { type: DetailsService, },
    ];
    TableBodyComponent.propDecorators = {
        'columns': [{ type: Input },],
        'detailTemplate': [{ type: Input },],
        'data': [{ type: Input },],
        'skip': [{ type: Input },],
        'selectable': [{ type: Input },],
    };
    return TableBodyComponent;
}());
