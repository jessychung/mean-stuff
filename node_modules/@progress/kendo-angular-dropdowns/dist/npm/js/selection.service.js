(function(e, a) { for(var i in a) e[i] = a[i]; }(exports, /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(55);


/***/ },

/***/ 6:
/***/ function(module, exports) {

	module.exports = require("@angular/core");

/***/ },

/***/ 16:
/***/ function(module, exports) {

	module.exports = require("./util");

/***/ },

/***/ 55:
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var __metadata = (this && this.__metadata) || function (k, v) {
	    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
	};
	var core_1 = __webpack_require__(6);
	var util_1 = __webpack_require__(16);
	/**
	 * @hidden
	 */
	var SelectionService = (function () {
	    function SelectionService() {
	        this.onSelect = new core_1.EventEmitter();
	        this.onChange = new core_1.EventEmitter();
	        this.onFocus = new core_1.EventEmitter();
	        this.selectedIndices = [];
	    }
	    SelectionService.prototype.isSelected = function (index) {
	        return util_1.isPresent(this.selectedIndices.find(function (current) { return current === index; }));
	    };
	    SelectionService.prototype.isFocused = function (index) {
	        return index === this.focused;
	    };
	    SelectionService.prototype.select = function (index) {
	        if (this.isSelected(index)) {
	            return;
	        }
	        this.selectedIndices = [index];
	        this.focused = index;
	        this.onSelect.emit({ indices: [index] });
	    };
	    SelectionService.prototype.change = function (index) {
	        this.selectedIndices = [index];
	        this.focused = index;
	        this.onChange.emit({ indices: [index] });
	    };
	    SelectionService.prototype.resetSelection = function (index) {
	        this.selectedIndices = index instanceof Array ? index : [index];
	        this.focused = this.selectedIndices[this.selectedIndices.length - 1];
	    };
	    Object.defineProperty(SelectionService.prototype, "selected", {
	        get: function () {
	            return this.selectedIndices;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(SelectionService.prototype, "focused", {
	        get: function () {
	            return this.focusedIndex;
	        },
	        set: function (index) {
	            this.focusedIndex = index;
	            this.onFocus.emit(index);
	        },
	        enumerable: true,
	        configurable: true
	    });
	    SelectionService = __decorate([
	        core_1.Injectable(), 
	        __metadata('design:paramtypes', [])
	    ], SelectionService);
	    return SelectionService;
	}());
	exports.SelectionService = SelectionService;


/***/ }

/******/ })));
//# sourceMappingURL=selection.service.js.map