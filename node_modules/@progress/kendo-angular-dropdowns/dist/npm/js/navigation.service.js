(function(e, a) { for(var i in a) e[i] = a[i]; }(exports, /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(51);


/***/ },

/***/ 6:
/***/ function(module, exports) {

	module.exports = require("@angular/core");

/***/ },

/***/ 15:
/***/ function(module, exports) {

	module.exports = require("./navigation-config");

/***/ },

/***/ 16:
/***/ function(module, exports) {

	module.exports = require("./util");

/***/ },

/***/ 17:
/***/ function(module, exports) {

	module.exports = require("./navigation-action");

/***/ },

/***/ 18:
/***/ function(module, exports) {

	module.exports = require("./common/keys");

/***/ },

/***/ 51:
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var __metadata = (this && this.__metadata) || function (k, v) {
	    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
	};
	var __param = (this && this.__param) || function (paramIndex, decorator) {
	    return function (target, key) { decorator(target, key, paramIndex); }
	};
	var core_1 = __webpack_require__(6);
	var util_1 = __webpack_require__(16);
	var keys_1 = __webpack_require__(18);
	var navigation_action_1 = __webpack_require__(17);
	var navigation_config_1 = __webpack_require__(15);
	var MIN_INDEX = 0;
	/**
	 * @hidden
	 */
	var NavigationService = (function () {
	    function NavigationService(config) {
	        this.navigate = new core_1.EventEmitter();
	        this.open = new core_1.EventEmitter();
	        this.close = new core_1.EventEmitter();
	        this.enter = new core_1.EventEmitter();
	        this.tab = new core_1.EventEmitter();
	        this.esc = new core_1.EventEmitter();
	        this.useLeftRightArrows = config.useLeftRightArrows;
	    }
	    NavigationService.prototype.process = function (args) {
	        var keyCode = args.keyCode;
	        var index;
	        var action = navigation_action_1.NavigationAction.Undefined;
	        if (args.altKey && keyCode === keys_1.Keys.down) {
	            action = navigation_action_1.NavigationAction.Open;
	        }
	        else if (args.altKey && keyCode === keys_1.Keys.up) {
	            action = navigation_action_1.NavigationAction.Close;
	        }
	        else if (keyCode === keys_1.Keys.enter) {
	            action = navigation_action_1.NavigationAction.Enter;
	        }
	        else if (keyCode === keys_1.Keys.esc) {
	            action = navigation_action_1.NavigationAction.Esc;
	        }
	        else if (keyCode === keys_1.Keys.tab) {
	            action = navigation_action_1.NavigationAction.Tab;
	        }
	        else if (keyCode === keys_1.Keys.up || (this.useLeftRightArrows && keyCode === keys_1.Keys.left)) {
	            index = this.next({ current: args.current, start: args.max, end: args.min, step: -1 });
	            action = navigation_action_1.NavigationAction.Navigate;
	        }
	        else if (keyCode === keys_1.Keys.down || (this.useLeftRightArrows && keyCode === keys_1.Keys.right)) {
	            index = this.next({ current: args.current, start: args.min, end: args.max, step: 1 });
	            action = navigation_action_1.NavigationAction.Navigate;
	        }
	        else if (keyCode === keys_1.Keys.home) {
	            index = MIN_INDEX;
	            action = navigation_action_1.NavigationAction.Navigate;
	        }
	        else if (keyCode === keys_1.Keys.end) {
	            index = args.max;
	            action = navigation_action_1.NavigationAction.Navigate;
	        }
	        if (action !== navigation_action_1.NavigationAction.Undefined) {
	            this[navigation_action_1.NavigationAction[action].toLowerCase()].emit(index);
	        }
	        return action;
	    };
	    NavigationService.prototype.next = function (args) {
	        if (!util_1.isPresent(args.current)) {
	            return args.start;
	        }
	        else {
	            return args.current !== args.end ? args.current + args.step : args.end;
	        }
	    };
	    NavigationService = __decorate([
	        core_1.Injectable(),
	        __param(0, core_1.Inject(navigation_config_1.NAVIGATION_CONFIG)), 
	        __metadata('design:paramtypes', [Object])
	    ], NavigationService);
	    return NavigationService;
	}());
	exports.NavigationService = NavigationService;


/***/ }

/******/ })));
//# sourceMappingURL=navigation.service.js.map