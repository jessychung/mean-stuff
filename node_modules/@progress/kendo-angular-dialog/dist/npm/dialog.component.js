"use strict";
var core_1 = require('@angular/core');
var dialog_titlebar_component_1 = require('./dialog-titlebar.component');
/**
 * Represents the Kendo UI Dialog component for Angular.
 */
var DialogComponent = (function () {
    function DialogComponent(_elRef, _renderer) {
        this._elRef = _elRef;
        this._renderer = _renderer;
        /**
         * Fires when the user clicks on the **Close** button of the Dialog.
         */
        this.close = new core_1.EventEmitter();
    }
    DialogComponent.prototype.ngAfterContentInit = function () {
        this.bubbleOnClose(this.titlebarContent);
    };
    DialogComponent.prototype.ngAfterViewInit = function () {
        this.bubbleOnClose(this.titlebarView);
    };
    DialogComponent.prototype.ngOnInit = function () {
        this._renderer.setElementAttribute(this._elRef.nativeElement, 'title', null);
    };
    Object.defineProperty(DialogComponent.prototype, "className", {
        get: function () {
            return 'k-dialog-wrapper';
        },
        enumerable: true,
        configurable: true
    });
    DialogComponent.prototype.bubbleOnClose = function (titlebar) {
        var _this = this;
        if (titlebar) {
            titlebar.close.subscribe(function (e) { return _this.close.emit(e); });
        }
    };
    DialogComponent.decorators = [
        { type: core_1.Component, args: [{
                    animations: [
                        core_1.trigger('overlayAppear', [
                            core_1.state('in', core_1.style({ opacity: 1 })),
                            core_1.transition('void => *', [
                                core_1.style({ opacity: .1 }),
                                core_1.animate('.3s cubic-bezier(.2, .6, .4, 1)')
                            ])
                        ]),
                        core_1.trigger('dialogSlideInAppear', [
                            core_1.state('in', core_1.style({ transform: 'translate(-50%, -50%)' })),
                            core_1.transition('void => *', [
                                core_1.style({ transform: 'translate(-50%, -60%)' }),
                                core_1.animate('.3s cubic-bezier(.2, 1, .2, 1)')
                            ])
                        ])
                    ],
                    exportAs: 'kendoDialog',
                    selector: 'kendo-dialog',
                    template: "\n    <div class=\"k-overlay\" @overlayAppear></div>\n\n    <div class=\"k-widget k-dialog k-window k-centered k-dialog-centered\" @dialogSlideInAppear>\n\n      <kendo-dialog-titlebar *ngIf=\"title\">{{title}}</kendo-dialog-titlebar>\n      <ng-content select=\"kendo-dialog-titlebar\" *ngIf=\"!title\"></ng-content>\n\n      <div class=\"k-window-content\">\n        <ng-content></ng-content>\n      </div>\n\n      <ng-content select=\"kendo-dialog-actions\"></ng-content>\n\n    </div>\n  "
                },] },
    ];
    /** @nocollapse */
    DialogComponent.ctorParameters = [
        { type: core_1.ElementRef, },
        { type: core_1.Renderer, },
    ];
    DialogComponent.propDecorators = {
        'title': [{ type: core_1.Input, args: ['title',] },],
        'close': [{ type: core_1.Output },],
        'titlebarContent': [{ type: core_1.ContentChild, args: [dialog_titlebar_component_1.DialogTitleBarComponent,] },],
        'titlebarView': [{ type: core_1.ViewChild, args: [dialog_titlebar_component_1.DialogTitleBarComponent,] },],
        'className': [{ type: core_1.HostBinding, args: ['class',] },],
    };
    return DialogComponent;
}());
exports.DialogComponent = DialogComponent;
